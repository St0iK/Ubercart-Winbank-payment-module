<?php
// $Id: uc_winbank_3dsecure.module Exp $

/**
*   @file
*   Developed by St0iK | jstoikidis@gmail.com 
*/


/*********************************************************************************************
 * Drupal Hooks
 *********************************************************************************************/


/**
* Implamentation of hook_menu().
*/

function uc_winbank_3dsecure_menu(){
	$items = array();
	
	// Δημιουργία Settings Page
	$items['admin/settings/uc_winbank_3dsecure'] = array(
	    'title' => 'uc_winbank_3dsecure Settings Page',
		'description' => 'Settings page',
	    'page callback' => 'drupal_get_form',
		'page arguments' => array('uc_winbank_3dsecure_settings_menu'),
	    'access callback' => 'uc_winbank_3dsecure_access',
	    'type' => MENU_NORMAL_ITEM,
		
	);
	
	$items['admin/settings/uc_winbank_3dsecure/acount_data'] = array(
    'title' => 'Acount data',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
	
	// Δημιουργία σελίδας στις ρυθμίσεις που θα εμφανίζει τα αποτελέσματα των Test Cases απο τη βάση.
	$items['admin/settings/uc_winbank_3dsecure/test_cases'] = array(
	    'title' => 'Test Cases',
		'description' => 'Test Cases',
	    'page callback' => 'test_cases',		
	    'access callback' => 'uc_winbank_3dsecure_access',
	    'type' => MENU_LOCAL_TASK,
		'weight' => 1,
		
	);
	// Responce Page. Εδώ επιστρέφει ο χρήστης αφού έχει μεταφερθεί σε Visa/Masterard για να βάλει το κωδικό ασφαλείας.
	$items['uc_winbank_3dsecure/response'] = array(
    	'title' => t('Form submitting for Transaction'),
		'description' => 'This is a description for my settings page :)',
    	'page callback' => 'uc_winbank_3dsecure_response',
    	'access callback' => TRUE,
		'type' => MENU_CALLBACK,
		'file' => 'uc_winbank_3dsecure.pages.inc',
	);
	
	return $items;
}

function uc_winbank_3dsecure_access(){
	if (user_access('access winbank settings')){
		return TRUE;
	}else{
		return FALSE;
	}
    
}

/*
* Settings Page
*/

function uc_winbank_3dsecure_settings_menu() {

	// Fieldset for 3DSecure specific settings
	$form['3d_secure_centinel_settings'] = array(
		'#type' => 'fieldset',
		'#title' => t('Centinel Settings'),
	);

	$form['3d_secure_centinel_settings']['uc_centinel_processor_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Cenitel Processor ID'),
		'#default_value' => variable_get('uc_centinel_processor_id',""),
		'#description' => t('Please enter the Centinel Processor Id provided'),
	);
	$form['3d_secure_centinel_settings']['uc_centinel_merchant_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Cenitel Merchant Id'),
		'#default_value' => variable_get('uc_centinel_merchant_id',""),
		'#description' => t('Please enter the Centinel Merchant Id provided'),
	);
	
	$form['3d_secure_centinel_settings']['uc_centitel_transaction_pwd'] = array(
		'#type' => 'textfield',
		'#title' => t('Centinel Transaction password'),
		'#default_value' => variable_get('uc_centitel_transaction_pwd',""),
		'#description' => t('Please enter the Centinel Transaction Password provided'),
	);

	$form['3d_secure_centinel_settings']['uc_centinel_maps_url'] = array(
		'#type' => 'textfield',
		'#title' => t('Cenitel Maps url'),
		'#default_value' => variable_get('uc_centinel_maps_url',""),
		'#description' => t('Please enter the Centinel Maps url provided'),
	);
	$form['3d_secure_centinel_settings']['uc_centinel_demo_url'] = array(
		'#type' => 'textfield',
		'#title' => t('Cenitel Demo url'),
		'#default_value' => variable_get('uc_centinel_demo_url',""),
		'#description' => t('Please enter the Centinel Demo url provided'),
	);

	
	// Fieldset for Winbanks specific settings
	$form['3d_secure_Winbank_settings'] = array(
		'#type' => 'fieldset',
		'#title' => t('Winbank Settings'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_request_type'] = array(
		'#type' => 'textfield',
		'#title' => t('Request Type'),
		'#default_value' => variable_get('uc_winbank_request_type',""),
		'#description' => t('ex SALE'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_acquirer_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Acquirer ID'),
		'#default_value' => variable_get('uc_winbank_acquirer_id',""),
		'#description' => t('Please enter the Acquirer ID provided by the bank'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_merchant_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Winbank Merchant ID'),
		'#default_value' => variable_get('uc_winbank_merchant_id',""),
		'#description' => t('Please enter the Merchant ID provided by the bank'),
	);

	$form['3d_secure_Winbank_settings']['uc_winbank_pos_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Pos ID'),
		'#default_value' => variable_get('uc_winbank_pos_id',""),
		'#description' => t('Please enter the Pos ID provided by the bank'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_channel_type'] = array(
		'#type' => 'textfield',
		'#title' => t('Channel Type'),
		'#default_value' => variable_get('uc_winbank_channel_type',""),
		'#description' => t('Please enter the Channel Type ex. 3DSecure'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_user'] = array(
		'#type' => 'textfield',
		'#title' => t('User'),
		'#default_value' => variable_get('uc_winbank_user',""),
		'#description' => t('Please enter your username'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_password'] = array(
		'#type' => 'textfield',
		'#title' => t('Password'),
		'#default_value' => variable_get('uc_winbank_password',""),
		'#description' => t('Please enter your Password'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_currency_code'] = array(
		'#type' => 'textfield',
		'#title' => t('Currency Code'),
		'#default_value' => variable_get('uc_winbank_currency_code',""),
		'#description' => t('Euro = > 978'),
	);
	$form['3d_secure_Winbank_settings']['uc_winbank_transaction_url'] = array(
		'#type' => 'textfield',
		'#title' => t('Transaction url'),
		'#default_value' => variable_get('uc_winbank_transaction_url',""),
		'#description' => t('https://paycenter.piraeusbank.gr/services/paymentgateway.asmx'),
	);

	// Return the form
	return system_settings_form($form);
}


/**
* Implementation of hook_payment_gateway().
*/
function uc_winbank_3dsecure_payment_gateway() {
	$gateways[] = array(
		'id' => 'uc_winbank_3dsecure',
		'title' => t('Winbank Web Service'),
		'description' => t('Process credit card payments through Winbank.'),
		'settings' => 'uc_winbank_3dsecure_settings_menu',
		'credit' => 'uc_winbank_3dsecure_charge',
		);

	return $gateways;
}

function uc_winbank_3dsecure_charge($order_id, $amount, $data) {

	global $user;
	unset($_SESSION['3d_winbank']);	
	// Loading CenitelClient.inc
	module_load_include('inc', 'uc_winbank_3dsecure', 'centinel/CentinelClient');	
	
	// Get the values of required variables
	
	$uc_centinel_processor_id = variable_get('uc_centinel_processor_id',''); 
	$uc_centinel_merchant_id = variable_get('uc_centinel_merchant_id',''); 
	$uc_centinel_transaction_password = variable_get('uc_centitel_transaction_pwd',''); 
	$uc_centinel_maps_url = variable_get('uc_centinel_maps_url',''); 
	$uc_centinel_demo_url = variable_get('uc_centinel_demo_url',''); 

	$uc_winbank_request_type = variable_get('uc_winbank_request_type',''); 
	$uc_winbank_acquirer_id = variable_get('uc_winbank_acquirer_id',''); 
	$uc_winbank_merchant_id = variable_get('uc_winbank_merchant_id','');
	$uc_winbank_pos_id = variable_get('uc_winbank_pos_id',''); 
	$uc_winbank_channel_type = variable_get('uc_winbank_channel_type','');
	$uc_winbank_user = variable_get('uc_winbank_user','');
	$uc_winbank_password = variable_get('uc_winbank_password','');
	$uc_winbank_password_test = variable_get('uc_winbank_password','');
	$uc_winbank_password = md5($uc_winbank_password);
	$uc_winbank_currency_code = variable_get('uc_winbank_currency_code','');
	$uc_winbank_transaction_url = variable_get('uc_winbank_transaction_url','');

	//Get orders data
	$order = uc_order_load($order_id);
	$centinel_amount = number_format($order->order_total,2) * 100;
	$amount = number_format($order->order_total,2);
	$expr_mm = sprintf('%02d',$order->payment_details['cc_exp_month']);
	$expr_yyyy = $order->payment_details['cc_exp_year'];	
	$order_number = $order_id * rand();	
	$cc_type = $order->payment_details['cc_type'];	
	$cc_cvv =  $order->payment_details['cc_cvv'];
	$orderDesc = "Order description";	
	/*
	* Τα test Cases θα κληθούν με τη παράμετρο OrderDescription να έχει ως τιμή το όνομα του Test Case ex Test01
	*/
	
	/*
	* S.O.S Delete the following line when the site goes live *
	*/
	$orderDesc =  $order->payment_details['cc_owner'];
	
	
	
	$cc_number = $order->payment_details['cc_number'];	
	$transaction_type = "C";


	/*
	* Creating a New Centitel Client. 
	* Κάνουμε πρώτα ένα cmpi_lookup request στη πλατφόρμα της Centinel.
	* Για να ελέγξουμε αν ο χρήστης είναι κάτοχος κάρτας 3DSecure (Verified by VISA ή MasterCard SecureCode)
	*/
	$centinelClient = new CentinelClient;

	$centinelClient->add('Version', '1.7');
	$centinelClient->add('MsgType', 'cmpi_lookup');		
	$centinelClient->add('MerchantId', $uc_centinel_merchant_id);
	$centinelClient->add('ProcessorId', $uc_centinel_processor_id);
	$centinelClient->add('TransactionPwd', $uc_centinel_transaction_password);

	$centinelClient->add('TransactionType', $transaction_type);
	$centinelClient->add('Amount', $centinel_amount);
	$centinelClient->add('CurrencyCode', $uc_winbank_currency_code);
	$centinelClient->add('CardNumber', $cc_number);
	$centinelClient->add('CardExpMonth',$expr_mm);
	$centinelClient->add('CardExpYear', $expr_yyyy);
	$centinelClient->add('OrderNumber', $order_number);

	$centinelClient->add('OrderDescription', $orderDesc);
	$centinelClient->add('UserAgent', $_SERVER['HTTP_USER_AGENT']);
	$centinelClient->add('BrowserHeader', $_SERVER['HTTP_ACCEPT']);
	$centinelClient->add('IPAddress', $_SERVER['REMOTE_ADDR']);
	$centinelClient->add('EMail', $email_address);
	
	
	//////////////////////////////////////////////////////////////////////////////////////////
	// Send the XML Msg to the MAPS Server, the Response is the CentinelResponse Object
	//////////////////////////////////////////////////////////////////////////////////////////

	$centinel_time_out_connect = 50;
	$centinel_timeout_read = 100;
	
	$centinelClient->sendHttp($uc_centinel_maps_url, $centinel_time_out_connect, $centinel_timeout_read);					
 
	$enrolled = '';
	$errorNo = '';
	$errorDesc = '';
	$transactionId = '';
	$eci = '';

	$errorNo = $centinelClient->getValue('ErrorNo');
	$errorDesc = $centinelClient->getValue('ErrorDesc');
	
	// Checking errorNumber
	if(strcasecmp('0', $errorNo)== 0 ){
	
    	$enrolled = $centinelClient->getValue('Enrolled');          // possible values of Y, N or U
    	$transactionId = $centinelClient->getValue('TransactionId');
    	$eci = $centinelClient->getValue('EciFlag');		
    	
    	/**
    	*	Παίρνουμε τις τιμές ASCUrl, Payload και TransactionId και τις αποθηκεύουμε σε SESSIONS
    	*/
   		
    	$AcsUrl= $centinelClient->getValue('ACSUrl');
    	$PaReq = $centinelClient->getValue('Payload');
    	$Centinel_TransactionId= $centinelClient->getValue('TransactionId');
    	
    	$_SESSION['3d_winbank']['Centinel_ACSURL']= $centinelClient->getValue('ACSUrl');
		$_SESSION['3d_winbank']['Centinel_PAYLOAD']= $centinelClient->getValue('Payload');
		$_SESSION['3d_winbank']['Centinel_TransactionId']= $centinelClient->getValue('TransactionId');
		
		if(trim($cc_type) == "Visa"){
			$customEci = 07;
			$cc_type = "VISA";
			
		}else if(trim($cc_type) == "Mastercard"){
			$customEci = 01;
			$cc_type = "MasterCard";			
	    }
		
		
	}

	/************************************************************
	*
	***		Αν το errorNo είναι 0 και το enrolled είναι Y 
	***		(Δηλαδή ο χρήστης είναι κάτοχος 3d Secure)
	*
	**********************************************************/	
	if(strcasecmp('0', $errorNo)== 0 && strcasecmp('Y', $enrolled) == 0){	

		// Αλλάζουμε τη τιμή του Εnrolled για να το στείλουμε σωστά		
	    $enrolled = "Yes";
	    
	   	// Encrypt cc_number
		$key = uc_credit_encryption_key();
   		$crypt = new uc_encryption_class;  		
    	$cc_number_crypted = $crypt->encrypt($key, serialize($cc_number));
    
	    // Apothikeyoume tis times se SESSIONS					    					        
	    $_SESSION['3d_winbank']['order_number']= $order_number;
	    $_SESSION['3d_winbank']['amount']= $amount;
	    $_SESSION['3d_winbank']['card_type']= $cc_type;
	    $_SESSION['3d_winbank']['cardHolderName']= $orderDesc;
	    $_SESSION['3d_winbank']['expr_mm']= $expr_mm;
	    $_SESSION['3d_winbank']['expr_yyyy']= $expr_yyyy;
	    $_SESSION['3d_winbank']['ccv']= $cc_cvv;
	    $_SESSION['3d_winbank']['card_number']= $cc_number_crypted;	    
	    $_SESSION['3d_winbank']['enrolled']= $enrolled; 
	    $_SESSION['3d_winbank']['order_id']= $order->order_id; 	    
	    
	    /*
	    	Κάνουμε redirect το χρήστη στη σελίδα της Centicel για authentication
	    	$AcsUrl και $PaReq τα παίρνουμε απο πάνω
	    */	    
		$TermUrl	= $uc_centinel_demo_url; // To pairnoume apo ta settings
		$MD			= "none";
		
		/*
		*	Submit Form
		*/
		
		$html="<HTML>"
		."<HEAD>"
		."<Title>Launch Payer Authentication Page</Title>"
		."<SCRIPT Language=\"Javascript\">"
		    ."function onLoadHandler(){"
		    	."document.frmLaunchACS.submit();"
		    ."}"
		."</SCRIPT>"
		."</HEAD>"
		//."<body onLoad=\"onLoadHandler();\">"
		."<br><br><br><br>"
		."<center>"
		."<FORM name=\"frmLaunchACS\" method=\"Post\" action=\"$AcsUrl\">"
		."<input type=hidden name=\"PaReq\" value=\"$PaReq\">"
		."<input type=hidden name=\"TermUrl\" value=\"$TermUrl\">"
		."<input type=hidden name=\"MD\" value=\"$MD\">"
		."<SCRIPT Language=\"Javascript\">"
		    ."onLoadHandler();"
		."</SCRIPT>"
		    ."<noscript> "
		    ."<br><br> "
		    ."<center> "
		    ."<font color=\"red\"> "
		    ."<h1>Processing your Payer Authentication Transaction</h1> "
		    ."<h2>JavaScript is currently disabled or is not supported by your browser.<br></h2> "
		    ."<h3>Please click Submit to continue	the processing of your transaction.</h3> "
		    ."</font> "
		    ."<input type=\"submit\" value=\"Submit\"> "
		    ."</center> "
		."</noscript> "
		."</FORM>"
		."</center>"
		."</BODY>"
		."</HTML>";	
		
		echo $html;
	    
	    
	/**
	* 	Αν το errorNo είναι 0 και το enrolled είναι N(No)
	*	Δηλαδή δεν είναι κάτοχος 3d Secure
	*   Στέλουμε τη συναλλαγή στην Winbank
	*/
	}else if(strcasecmp('0', $errorNo)== 0 && strcasecmp('N', $enrolled) == 0){		
		/*		
		* START of Authorization with WINBANK  ..:: Enrolled = No ::..
		*/			
	
		$enrolled = "No";		
			
		$preauth_data = "<?xml version='1.0' encoding='utf-8'?>
		<soap:Envelope xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'>
		<soap:Body>
		<ProcessTransaction xmlns='http://piraeusbank.gr/paycenter'>
		<TransactionRequest xmlns='http://piraeusbank.gr/paycenter/1.0'>
		<Header>
		<RequestType>$uc_winbank_request_type</RequestType>
		<MerchantInfo>
		<AcquirerID>$uc_winbank_acquirer_id</AcquirerID>
		<MerchantID>$uc_winbank_merchant_id</MerchantID>
		<PosID>$uc_winbank_pos_id</PosID>
		<ChannelType>3DSecure</ChannelType>
		<User>$uc_winbank_user</User>
		<Password>$uc_winbank_password</Password>
		</MerchantInfo>
		
		</Header>
		<Body>
		<TransactionInfo>
		<MerchantReference>$order_number</MerchantReference>
		<TransactionReferenceID xsi:nil='true' />
		<EntryType xsi:nil='true' />
		<CurrencyCode>$uc_winbank_currency_code</CurrencyCode>
		<Amount>$amount</Amount>
		<Installments xsi:nil='true' />
		<ExpirePreauth xsi:nil='true' />
		<TipAmount xsi:nil='true' />
		<Bnpl xsi:nil='true' />
		<SessionKey xsi:nil='true' />
		<CardInfo><CardType>$cc_type</CardType>
		<CardNumber>$cc_number</CardNumber>
		<CardHolderName>$orderDesc</CardHolderName>
		<ExpirationMonth>$expr_mm</ExpirationMonth>
		<ExpirationYear>$expr_yyyy</ExpirationYear>
		<Cvv2>$cc_cvv</Cvv2>
		<Aid xsi:nil='true' />
		<PinBlock xsi:nil='true' />
		<Track1 xsi:nil='true' />
		<Track2 xsi:nil='true' />
		</CardInfo><AuthInfo>
		<Cavv></Cavv>
		<Eci>$eci</Eci>
		<Xid></Xid>
		<Enrolled>$enrolled</Enrolled>
		<PAResStatus>Unknown</PAResStatus>
		<SignatureVerification>Undefined</SignatureVerification>
		</AuthInfo>
		</TransactionInfo>
		</Body>
		</TransactionRequest></ProcessTransaction></soap:Body></soap:Envelope>";
			
		$ch = curl_init($uc_winbank_transaction_url);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
		curl_setopt($ch, CURLOPT_SSLVERSION, 3);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
		
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_TIMEOUT, 90); 
		curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: text/xml'));
		curl_setopt($ch, CURLOPT_POSTFIELDS, "$preauth_data");
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$output = curl_exec($ch);
		curl_close($ch);

		$xmlString = preg_replace("/(<\/?)(\w+):([^>]*>)/", "$1$2$3", $output);	
			 
		// Use SimpleXML to parse response into object
		$xml = new SimpleXMLElement($xmlString);
		 
		// SimpleXML object for tags in the <soap:Body> node
		$result = $xml->soapBody;
		
		$statusFlag = $result->ProcessTransactionResponse->TransactionResponse->Body->TransactionInfo->StatusFlag;
		$resultDescription = $result->ProcessTransactionResponse->TransactionResponse->Header->ResultDescription;
		$resultCode = $result->ProcessTransactionResponse->TransactionResponse->Header->ResultCode;
		$responceCode = $result->ProcessTransactionResponse->TransactionResponse->Body->TransactionInfo->ResponseCode;
		$supportReferenceID = $result->ProcessTransactionResponse->TransactionResponse->Header->SupportReferenceID;
		

		/**
		*   Αποθήκευση στη βάση (cc_type,orderNumber,supportReferenceID,cardHolderName) για αποστολή των Test Cases
		*/	
		
		db_query("INSERT INTO uc_winbank_3dsecure_test_cases (cc_type, orderNumber, supportReferenceID,cardHolderName) VALUES 
		('$cc_type','$order_number','$supportReferenceID','$orderDesc')");
		
		unset($_SESSION['3d_winbank']);
		
		if($resultCode == '0' AND $responceCode == '00' AND $statusFlag == "Success"){
		
			// Η συναλλαγή ολοκληρώθηκε με επιτυχία
			$comment = "Η κράτηση ολοκληρώθηκε με επιτυχία.";
	    	uc_payment_enter($order_id, 'uc_winbank_3dsecure', $amount, 0, NULL, $comment);
			uc_order_comment_save($order_id, 0, t('Order created through website.'), 'admin');			
			$_SESSION['do_complete'] = TRUE;			
			drupal_goto('cart/checkout/complete');
			
		}else if($resultCode == '1072'){			        
			
			$message = t('Μη πραγματοποιήση συναλλαγής λόγω διαδικασίας 
			εκκαθάρισης των συναλλαγών του τρέχοντος πακέτου (κλείσιμο πακέτου) που πραγματοποιείται αυτή τη στιγμή');		   
		    drupal_set_message($message);		    
		    $_SESSION['do_review'] = TRUE;
		    drupal_goto('cart/checkout/review');
		    
		}else if($resultCode == '0' AND $responceCode == '12' AND $statusFlag == "Failure"){	
					
			$message = 'Η συναλλαγή σας απορρίφθηκε απο την τράπεζα.-';		   
		    drupal_set_message($message,'error');		    
		    $_SESSION['do_review'] = TRUE;
		    drupal_goto('cart/checkout/review');
		    
		}else if($resultCode == '0' AND $responceCode == '11') {
			
			$message = 'Απόπειρα διπλοχρέωσης συναλλαγής. Η συναλλαγή ακυρώθηκε.';		   
		    drupal_set_message($message,'error');		   
		    $_SESSION['do_review'] = TRUE;
		    drupal_goto('cart/checkout/review');
		    
		}else if($resultCode == '501'){
			
			$message = 'Αδυναμία εκτέλεσης συναλλαγής λόγω (τεχνικού) προβλήματος επικοινωνίας με το σύστημα επεξεργασίας συναλλαγών.';		   
		    drupal_set_message($message,'error');		    
		    $_SESSION['do_review'] = TRUE;
		    drupal_goto('cart/checkout/review');
			
		}else if($resultCode == '981'){
			
			$message = 'Αδυναμία εκτέλεσης της συναλλαγής λόγω λανθασμένων στοιχείων κάρτας ή κάρτας που δεν υποστηρίζεται απο το σύστημα';		   
		    drupal_set_message($message,'error');		    
		    $_SESSION['do_review'] = TRUE;
		    drupal_goto('cart/checkout/review');
		}else{
		
			$message = 'Η συναλλαγή απορρίφθηκε απο την τράπεζα.';		   
		    drupal_set_message($message,'error');		    	
		    $_SESSION['do_review'] = TRUE;
		    drupal_goto('cart/checkout/review');
			
		}
		
		
		
	/**
	* 	Στη περίπτωση που απο το cmpi_lookup message μας επιστραφέι undefiend δεν στέλνουμε τη συναλλαγή
	*/
	}else{
	
		db_query("INSERT INTO uc_winbank_3dsecure_test_cases (cc_type, orderNumber, supportReferenceID,cardHolderName) VALUES 
		('$cc_type','$order_number','$supportReferenceID','$orderDesc')");
		
		unset($_SESSION['3d_winbank']);
	   	$message = "Αδυναμία εκτέλεσης της συναλλαγής. Παρακαλούμε δοκιμάστε αργότερα --.$resultDescription -- $enrolled";		   
		drupal_set_message($message,'error');		
		$_SESSION['do_review'] = TRUE;
		drupal_goto('cart/checkout/review');
	   
	}

	// <-- END OF CHECKING ENROLLMENT -- > //	
}
function test_cases(){
/*
* 	TODO: Optimize the Test Cases Page
*/
$output = "<table border='1'>";
$output .="<tr><th>Test Case</th><th></th>Credit Card Type<th>Order Number</th><th>supportReferenceID</th></tr>";

		
		$resource = db_query("SELECT * FROM  `uc_winbank_3dsecure_test_cases` ORDER BY id ASC");
		$results = array();
		while ($row = db_fetch_array($resource)){
			$output .= "<tr>";
			$output .= "<td>" . $row['cardHolderName'] ."</td>";
			$output .= "<td>" . $row['cc_type'] ."</td>";
			$output .= "<td>" . $row['orderNumber'] ."</td>";
			$output .= "<td>" . $row['supportReferenceID'] ."</td>";
			$output .= "</tr>";

		}

		 $output .= "</table>";
		return $output;
}

